apply plugin: 'java'
apply plugin: 'application'
mainClassName = 'com.example.pdfs.ParamPDF'

run {
    if (project.hasProperty('args')) {
        args project.args.split('\\s')
    }
}

jar {
    from files(sourceSets.main.output.classesDir)
        from {
            configurations.compile.collect {
                zipTree(it)
            }
        } {
            exclude "META-INF/*.SF"
            exclude "META-INF/*.DSA"
            exclude "META-INF/*.RSA"
        }
    manifest {
        attributes "Main-Class": "com.example.pdfs.ParamPDF"
    }
}

repositories {
    jcenter()
}

buildDir = 'build'

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.14'
    compile 'com.itextpdf:itextpdf:5.5.9'
    testCompile 'junit:junit:4.12'
}

task makeResourceFolder(group: 'projectInit') << {
    sourceSets*.resources.srcDirs*.each { it.mkdirs()
    }
}

task initJavaFolder(group: 'projectInit') << {
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
    main {
        java {
            srcDirs = ['src', 'mysrc']
        }
    }
    test {
        java {
            srcDirs = ['test', 'mytest']
        }
    }
}

task printJavaFolder(group: 'projectInit') << {
    sourceSets {
        main {
            println "java.srcDirs: ${java.srcDirs}"
            println "resources.srcDirs: ${resources.srcDirs}"
        }
    }
}